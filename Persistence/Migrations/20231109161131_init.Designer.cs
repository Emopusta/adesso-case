// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Contexts;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    [Migration("20231109161131_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Countries", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d2bc1850-e738-49a2-b262-08dbe128c8cd"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Turkiye"
                        },
                        new
                        {
                            Id = new Guid("4067b3e2-d378-46a4-a25b-cc5be4c24472"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Belcika"
                        },
                        new
                        {
                            Id = new Guid("2fafbee5-f65d-48a5-8637-270a9ae5cd4c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Fransa"
                        },
                        new
                        {
                            Id = new Guid("34a9d6f9-26aa-4cc6-96fc-7cf6f46e13eb"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Hollanda"
                        },
                        new
                        {
                            Id = new Guid("f5f76ad1-25ba-452c-90c0-2c1f33df58db"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Portekiz"
                        },
                        new
                        {
                            Id = new Guid("a7170631-6b14-4e7e-b2a9-22bb1403ab8a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ispanya"
                        },
                        new
                        {
                            Id = new Guid("d3749aac-ed3e-442e-8206-d508b1b94dcc"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Almanya"
                        },
                        new
                        {
                            Id = new Guid("35cd46ac-8347-48c1-8e5b-c631eb655d79"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Italya"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Draw", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GroupId");

                    b.Property<string>("Picker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Picker");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TeamId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Draws", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("MatchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MatchName");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Groups", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CountryId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GroupId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Teams", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("fca106a6-a9ad-46eb-9db9-40f13ce9e0fc"),
                            CountryId = new Guid("d2bc1850-e738-49a2-b262-08dbe128c8cd"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adesso Istanbul"
                        },
                        new
                        {
                            Id = new Guid("dae0a81b-1005-4556-9a79-bbc2d87d9025"),
                            CountryId = new Guid("d2bc1850-e738-49a2-b262-08dbe128c8cd"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adesso Antalya"
                        },
                        new
                        {
                            Id = new Guid("a36170b9-9840-4dca-9988-b21d8c70b5ad"),
                            CountryId = new Guid("d2bc1850-e738-49a2-b262-08dbe128c8cd"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adesso Izmir"
                        },
                        new
                        {
                            Id = new Guid("cfa7c2f1-39b3-459a-b73f-5feb5a026b02"),
                            CountryId = new Guid("d2bc1850-e738-49a2-b262-08dbe128c8cd"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adesso Ankara"
                        },
                        new
                        {
                            Id = new Guid("8bc137f5-5be4-401c-a983-e3e4ee3d4603"),
                            CountryId = new Guid("d3749aac-ed3e-442e-8206-d508b1b94dcc"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adesso Berlin"
                        },
                        new
                        {
                            Id = new Guid("4045aa7a-1cd8-495e-9390-5ec188a44a73"),
                            CountryId = new Guid("d3749aac-ed3e-442e-8206-d508b1b94dcc"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adesso Dortmund"
                        },
                        new
                        {
                            Id = new Guid("284c4838-228d-4dd6-8331-d8c809c22829"),
                            CountryId = new Guid("d3749aac-ed3e-442e-8206-d508b1b94dcc"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adesso Munih"
                        },
                        new
                        {
                            Id = new Guid("a89468b5-c7ed-4239-b34f-2e0ad1d3cbf3"),
                            CountryId = new Guid("d3749aac-ed3e-442e-8206-d508b1b94dcc"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adesso Frankfurt"
                        },
                        new
                        {
                            Id = new Guid("74b7c9f5-0b42-47e1-9d6f-f4759b7cc242"),
                            CountryId = new Guid("2fafbee5-f65d-48a5-8637-270a9ae5cd4c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adesso Paris"
                        },
                        new
                        {
                            Id = new Guid("434be56e-579e-4f7c-aa1d-fe91cc841ef9"),
                            CountryId = new Guid("2fafbee5-f65d-48a5-8637-270a9ae5cd4c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adesso Lyon"
                        },
                        new
                        {
                            Id = new Guid("e13736f1-238a-4c89-85ce-e99e832b445d"),
                            CountryId = new Guid("2fafbee5-f65d-48a5-8637-270a9ae5cd4c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adesso Marsilya"
                        },
                        new
                        {
                            Id = new Guid("3353bfc0-53de-4401-be0d-1b32fa25af4e"),
                            CountryId = new Guid("2fafbee5-f65d-48a5-8637-270a9ae5cd4c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adesso Nice"
                        },
                        new
                        {
                            Id = new Guid("14b32de5-ad3e-4450-af32-238206e2a8b8"),
                            CountryId = new Guid("34a9d6f9-26aa-4cc6-96fc-7cf6f46e13eb"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adesso Eindhoven"
                        },
                        new
                        {
                            Id = new Guid("841911c9-272d-493f-8360-5d2f417909e9"),
                            CountryId = new Guid("34a9d6f9-26aa-4cc6-96fc-7cf6f46e13eb"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adesso Amsterdam"
                        },
                        new
                        {
                            Id = new Guid("0477a0ac-53ef-466b-a81c-63025c44c5fe"),
                            CountryId = new Guid("34a9d6f9-26aa-4cc6-96fc-7cf6f46e13eb"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adesso Lahey"
                        },
                        new
                        {
                            Id = new Guid("678e6608-cf1a-44fd-9150-42812cb14746"),
                            CountryId = new Guid("34a9d6f9-26aa-4cc6-96fc-7cf6f46e13eb"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adesso Rotterdam"
                        },
                        new
                        {
                            Id = new Guid("d98b22de-7d55-4086-b9a3-bc0cd5da75ca"),
                            CountryId = new Guid("f5f76ad1-25ba-452c-90c0-2c1f33df58db"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adesso Lisbon"
                        },
                        new
                        {
                            Id = new Guid("53266fea-1146-47d8-b961-058706404230"),
                            CountryId = new Guid("f5f76ad1-25ba-452c-90c0-2c1f33df58db"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adesso Porto"
                        },
                        new
                        {
                            Id = new Guid("a6cdf9b2-f271-4223-af38-2cb160361acb"),
                            CountryId = new Guid("f5f76ad1-25ba-452c-90c0-2c1f33df58db"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adesso Braga"
                        },
                        new
                        {
                            Id = new Guid("07f9f324-b19b-4c0d-acd0-47876161f808"),
                            CountryId = new Guid("f5f76ad1-25ba-452c-90c0-2c1f33df58db"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adesso Coimbra"
                        },
                        new
                        {
                            Id = new Guid("211efb8d-ee8d-44a2-8fdc-f00261261b57"),
                            CountryId = new Guid("35cd46ac-8347-48c1-8e5b-c631eb655d79"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adesso Roma"
                        },
                        new
                        {
                            Id = new Guid("d2980c99-b4ca-4098-8bc5-31af7007510b"),
                            CountryId = new Guid("35cd46ac-8347-48c1-8e5b-c631eb655d79"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adesso Milano"
                        },
                        new
                        {
                            Id = new Guid("022ab864-3586-4165-8676-591ab1f53bda"),
                            CountryId = new Guid("35cd46ac-8347-48c1-8e5b-c631eb655d79"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adesso Venedik"
                        },
                        new
                        {
                            Id = new Guid("6f0cf9ff-aca1-4cc1-8829-05eb66c2bf2e"),
                            CountryId = new Guid("35cd46ac-8347-48c1-8e5b-c631eb655d79"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adesso Napoli"
                        },
                        new
                        {
                            Id = new Guid("07a1b3ec-962b-467d-9c24-4bb7ba36685e"),
                            CountryId = new Guid("a7170631-6b14-4e7e-b2a9-22bb1403ab8a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adesso Sevilla"
                        },
                        new
                        {
                            Id = new Guid("5cc166dd-d502-4afd-807b-8e2fbf4b84c2"),
                            CountryId = new Guid("a7170631-6b14-4e7e-b2a9-22bb1403ab8a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adesso Madrid"
                        },
                        new
                        {
                            Id = new Guid("c3bd1bf9-43d4-473a-a22e-c1bd02ae4eed"),
                            CountryId = new Guid("a7170631-6b14-4e7e-b2a9-22bb1403ab8a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adesso Barselona"
                        },
                        new
                        {
                            Id = new Guid("36c3648d-82b2-4174-a745-8011639ba1d9"),
                            CountryId = new Guid("a7170631-6b14-4e7e-b2a9-22bb1403ab8a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adesso Granada"
                        },
                        new
                        {
                            Id = new Guid("537fef6d-e3ae-4f85-8119-75a465400800"),
                            CountryId = new Guid("4067b3e2-d378-46a4-a25b-cc5be4c24472"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adesso Bruksel"
                        },
                        new
                        {
                            Id = new Guid("9964bc4a-4f4b-4210-84a0-13c4e1f7857a"),
                            CountryId = new Guid("4067b3e2-d378-46a4-a25b-cc5be4c24472"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adesso Brugge"
                        },
                        new
                        {
                            Id = new Guid("ed3e891b-9446-4103-a523-6df0aa36f1b7"),
                            CountryId = new Guid("4067b3e2-d378-46a4-a25b-cc5be4c24472"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adesso Gent"
                        },
                        new
                        {
                            Id = new Guid("c81b3b57-ba3d-4e49-8798-ed9ac7bece4b"),
                            CountryId = new Guid("4067b3e2-d378-46a4-a25b-cc5be4c24472"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adesso Anvers"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Team", b =>
                {
                    b.HasOne("Domain.Entities.Group", "Group")
                        .WithMany("Teams")
                        .HasForeignKey("GroupId");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Domain.Entities.Group", b =>
                {
                    b.Navigation("Teams");
                });
#pragma warning restore 612, 618
        }
    }
}
